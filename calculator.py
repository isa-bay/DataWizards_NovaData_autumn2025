def process_numbers(numbers):
    total = sum(numbers)
    avg = total / len(numbers)
    min_num = min(numbers)
    max_num = max(numbers)
    squares = [n ** 2 for n in numbers]

    return {
        "sum": total,
        "average": round(avg, 2),
        "min": min_num,
        "max": max_num,
        "squares": squares
    }

def main():
    print("üî¢ Number Processor")
    raw_input_data = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ")

    try:
        numbers = [float(x.strip()) for x in raw_input_data.split(",") if x.strip()]
    except ValueError:
        print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.")
        return

    if not numbers:
        print("–û—à–∏–±–∫–∞: –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞.")
        return

    results = process_numbers(numbers)

    print("\n –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π:")
    print(f"–°—É–º–º–∞ —á–∏—Å–µ–ª: {results['sum']}")
    print(f"–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {results['average']}")
    print(f"–ú–∏–Ω–∏–º—É–º: {results['min']}")
    print(f"–ú–∞–∫—Å–∏–º—É–º: {results['max']}")
    print(f"–ö–≤–∞–¥—Ä–∞—Ç—ã —á–∏—Å–µ–ª: {results['squares']}")

if __name__ == "__main__":
    main()