
# –£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–∫–∞–∑–∞ —Ñ–∞—Å—Ç-—Ñ—É–¥–∞

class FastFoodOrderSystem:
    def __init__(self):
        self.menu = {
            '1': {'name': '–ö—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã', 'price': 3.50, 'category': '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞'},
            '2': {'name': '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', 'price': 2.50, 'category': '–ì–∞—Ä–Ω–∏—Ä—ã'},
            '3': {'name': '–ß–∏–∑–±—É—Ä–≥–µ—Ä', 'price': 4.00, 'category': '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞'},
            '4': {'name': '–•–æ—Ç-–¥–æ–≥', 'price': 3.50, 'category': '–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞'},
            '5': {'name': '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å', 'price': 3.75, 'category': '–°–∞–ª–∞—Ç—ã'},
            '6': {'name': '–ë–æ–ª—å—à–æ–π –Ω–∞–ø–∏—Ç–æ–∫', 'price': 1.75, 'category': '–ù–∞–ø–∏—Ç–∫–∏'},
            '7': {'name': '–°—Ä–µ–¥–Ω–∏–π –Ω–∞–ø–∏—Ç–æ–∫', 'price': 1.50, 'category': '–ù–∞–ø–∏—Ç–∫–∏'},
            '8': {'name': '–ú–∞–ª–µ–Ω—å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫', 'price': 1.25, 'category': '–ù–∞–ø–∏—Ç–∫–∏'},
            '9': {'name': '–ú–∏–ª–∫—à–µ–π–∫', 'price': 2.25, 'category': '–î–µ—Å–µ—Ä—Ç—ã'},
            '10': {'name': '–°—ã—Ä–Ω—ã–π —Å–æ—É—Å', 'price': 0.95, 'category': '–°–æ—É—Å—ã'},
            '11': {'name': '–ö–µ—Ç—á—É–ø', 'price': 0.50, 'category': '–°–æ—É—Å—ã'},
            '12': {'name': '–ú–æ—Ä–æ–∂–µ–Ω–æ–µ', 'price': 2.00, 'category': '–î–µ—Å–µ—Ä—Ç—ã'}
        }

        self.order_history = []

    def display_menu(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
        print("\n" + "=" * 50)
        print("           –ú–ï–ù–Æ –†–ï–°–¢–û–†–ê–ù–ê –ë–´–°–¢–†–û–ì–û –ü–ò–¢–ê–ù–ò–Ø")
        print("=" * 50)

        categories = {}
        for num, item in self.menu.items():
            category = item['category']
            if category not in categories:
                categories[category] = []
            categories[category].append((num, item))

        for category, items in categories.items():
            print(f"\n{category.upper()}:")
            print("-" * 30)
            for num, item in items:
                print(f"{num:>2}. {item['name']:<20} - ${item['price']:>5.2f}")

    def get_order(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        while True:
            order_input = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –±–ª—é–¥ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): ").strip()

            if order_input.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
                return None

            if not order_input:
                print("‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –±–ª—é–¥!")
                continue

            return order_input.split()

    def process_order(self, order_items):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–∫–∞–∑ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
        if not order_items:
            return None

        order_details = {}
        total = 0
        invalid_items = []

        for item_num in order_items:
            if item_num in self.menu:
                item = self.menu[item_num]
                item_name = item['name']
                order_details[item_name] = order_details.get(item_name, 0) + 1
                total += item['price']
            else:
                invalid_items.append(item_num)

        return {
            'items': order_details,
            'total': total,
            'invalid_items': invalid_items
        }

    def display_order_summary(self, order_result):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–≤–æ–¥–∫—É –∑–∞–∫–∞–∑–∞"""
        if not order_result or not order_result['items']:
            print("‚ùå –ó–∞–∫–∞–∑ –ø—É—Å—Ç!")
            return

        print("\n" + "=" * 40)
        print("          –°–í–û–î–ö–ê –ó–ê–ö–ê–ó–ê")
        print("=" * 40)

        for item, count in order_result['items'].items():
            price = next(menu_item['price'] for menu_item in self.menu.values()
                         if menu_item['name'] == item)
            print(f"  {count:>2}x {item:<20} ${price * count:>6.2f}")

        print("-" * 40)
        print(f"  –ò–¢–û–ì–û: ${order_result['total']:>24.2f}")
        print("=" * 40)

        if order_result['invalid_items']:
            print(f"\n‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–µ–Ω—é: {', '.join(order_result['invalid_items'])}")

    def apply_discount(self, total):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–∫–∏–¥–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞"""
        discount = 0
        if total > 20:
            discount = 0.15  # 15% —Å–∫–∏–¥–∫–∞
            print("üéâ –°–∫–∏–¥–∫–∞ 15% –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–∑–∞–∫–∞–∑ —Å–≤—ã—à–µ $20)!")
        elif total > 15:
            discount = 0.10  # 10% —Å–∫–∏–¥–∫–∞
            print("üéâ –°–∫–∏–¥–∫–∞ 10% –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–∑–∞–∫–∞–∑ —Å–≤—ã—à–µ $15)!")
        elif total > 10:
            discount = 0.05  # 5% —Å–∫–∏–¥–∫–∞
            print("üéâ –°–∫–∏–¥–∫–∞ 5% –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–∑–∞–∫–∞–∑ —Å–≤—ã—à–µ $10)!")

        discount_amount = total * discount
        final_total = total - discount_amount

        if discount > 0:
            print(f"  –°—É–º–º–∞ —Å–∫–∏–¥–∫–∏: ${discount_amount:>19.2f}")
            print(f"  –ö –û–ü–õ–ê–¢–ï: ${final_total:>22.2f}")

        return final_total

    def save_order_to_history(self, order_result, final_total):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–∫–∞–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é"""
        if order_result and order_result['items']:
            self.order_history.append({
                'items': order_result['items'].copy(),
                'subtotal': order_result['total'],
                'final_total': final_total,
                'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            })

    def display_order_history(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤"""
        if not self.order_history:
            print("\nüìù –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç–∞")
            return

        print("\n" + "=" * 50)
        print("           –ò–°–¢–û–†–ò–Ø –ó–ê–ö–ê–ó–û–í")
        print("=" * 50)

        for i, order in enumerate(self.order_history, 1):
            print(f"\n–ó–∞–∫–∞–∑ #{i} ({order['timestamp']}):")
            for item, count in order['items'].items():
                print(f"  {count}x {item}")
            print(f"  –ò—Ç–æ–≥–æ: ${order['final_total']:.2f}")

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–∫–∞–∑–æ–≤!")
        print("–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥'")

        while True:
            self.display_menu()
            order_items = self.get_order()

            if order_items is None:
                break

            order_result = self.process_order(order_items)

            if order_result and order_result['items']:
                self.display_order_summary(order_result)
                final_total = self.apply_discount(order_result['total'])
                self.save_order_to_history(order_result, final_total)

                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
                confirm = input("\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
                if confirm in ['–¥–∞', 'yes', 'y', '–¥']:
                    print("‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçî")
                else:
                    print("‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        self.display_order_history()
        print("\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    import datetime

    system = FastFoodOrderSystem()
    system.run()
